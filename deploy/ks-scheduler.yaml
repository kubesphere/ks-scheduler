apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:ks-scheduler
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - kube-scheduler
      - ks-scheduler
    resources:
      - endpoints
    verbs:
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - pods/binding
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - get
      - watch
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ks-scheduler-config
  namespace: kubesphere-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    schedulerName: ks-scheduler
    algorithmSource:
      policy:
        configMap:
          namespace: kubesphere-system
          name: ks-scheduler-policy
    leaderElection:
      leaderElect: false
      lockObjectName: ks-scheduler
      lockObjectNamespace: kubesphere-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ks-scheduler-policy
  namespace: kubesphere-system
data:
  policy.cfg: |
    {
      "kind" : "Policy",
      "apiVersion" : "v1",
      "predicates" : [
        {"name" : "PodFitsHostPorts"},
        {"name" : "PodFitsResources"},
        {"name" : "NoDiskConflict"},
        {"name" : "MatchNodeSelector"}
      ],
      "priorities" : [
        {"name" : "LeastRequestedPriority", "weight" : 1},
        {"name" : "BalancedResourceAllocation", "weight" : 1},
        {"name" : "ImageLocalityPriority", "weight" : 1}
      ],
      "extenders" : [{
        "urlPrefix": "http://localhost:8080/scheduler",
        "filterVerb": "predicates/alwaystrue",
        "prioritizeVerb": "priorities/pipeline",
        "weight": 3,
        "enableHttps": false,
        "nodeCacheCapable": false
      }],
      "hardPodAffinitySymmetricWeight" : 10
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ks-scheduler
  namespace: kubesphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ks-scheduler-as-kube-scheduler
subjects:
  - kind: ServiceAccount
    name: ks-scheduler
    namespace: kubesphere-system
roleRef:
  kind: ClusterRole
  name: system:ks-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ks-scheduler
  namespace: kubesphere-system
  labels:
    app: ks-scheduler
    version: advanced-2.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ks-scheduler
      version: advanced-2.1.0
  template:
    metadata:
      labels:
        app: ks-scheduler
        version: advanced-2.1.0
    spec:
      serviceAccountName: ks-scheduler
      nodeSelector:
        role: master
      volumes:
      - name: ks-scheduler-config
        configMap:
          name: ks-scheduler-config
#      - name: data
#        persistentVolumeClaim:
#          claimName: ks-scheduler-data
      containers:
        - name: ks-scheduler
          image: dockerhub.qingcloud.com/google_containers/hyperkube:v1.13.5
          imagePullPolicy: IfNotPresent
          args:
            - kube-scheduler
            - --address=0.0.0.0
            - --v=5
            - --scheduler-name=ks-scheduler
            - --feature-gates=KubeletPluginsWatcher=false,CSINodeInfo=false,CSIDriverRegistry=false,RotateKubeletClientCertificate=true
            - --leader-elect=false
            - --config=/ks-scheduler/config.yaml
          volumeMounts:
          - name: ks-scheduler-config
            mountPath: /ks-scheduler
#          - mountPath: /data
#            name: data
        - name: ks-scheduler-devops
          image: zhuxiaoyang/ks-scheduler:v1
          imagePullPolicy: IfNotPresent
#          livenessProbe:
#            httpGet:
#              path: /version
#              port: 8080
#          readinessProbe:
#            httpGet:
#              path: /version
#              port: 8080
          ports:
            - containerPort: 8080
